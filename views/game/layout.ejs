<!doctype html>
<html>
	<head>
		<title>A.I Crafter Engine test</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">

		<!-- CSS: implied media="all" -->
		<link rel="stylesheet" href="css/game.css">

		<!--physic and graphic engines-->
		<script src="js/three.js"></script>
		<script src="js/ammo.js"></script>

		<!--server-client communication-->
		<script src="/socket.io/socket.io.js"></script>
		<!--script type="text/javascript" src="/nowjs/now.js"></script-->

		<!--game engine-->
		<script src="js/aicraft.js"></script>
		
		<!--ace editor-->
		<script src="vendor/ace/ace-uncompressed.js"></script>

		<!--wrapper for plugins-->
		<script src="vendor/three.js/Detector.js"></script>
		<script src="vendor/three.js/Stats.js"></script>
		<script src="vendor/threex/THREEx.WindowResize.js"></script>
		<!--script src="vendor/helvetiker_bold.typeface.js"></script-->
		

		<script type="x-shader/x-vertex" id="vertexshader">

			uniform float amplitude;

			attribute vec3 displacement;
			attribute vec3 customColor;

			varying vec3 vColor;

			void main() {

				vec3 newPosition = position + amplitude * displacement;

				vColor = customColor;

				gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );

			}

		</script>

		<script type="x-shader/x-fragment" id="fragmentshader">

			uniform vec3 color;
			uniform float opacity;

			varying vec3 vColor;

			void main() {

				gl_FragColor = vec4( vColor * color, opacity );

			}

		</script>
		

	</head>
<body>
	<!-- three.js container -->
    	<div id="container"></div>
	<!-- info on screen display -->
		<%- body %>
</body>
</html>
