
Tasks:

============ waiting ==============

	Add Canvas to html page
	Design a very simple Player Avatar
	Design a very simple A.I Avatar
	Add Player to Canvas
	Add A.I to Canvas 
	Pesudo command to player movement control with six moving directions
	A golang websocket service that recieves RPC calls for every A.I commands and player commands, and changes positions accordingly 
	Add "is_enemy" boolean to player/ai JS classes
	Ranger A.I follows the player, only allow to move within some R from the player as the centre
	Defender A.I is stationary, only allowed to move within some R from the deployed point.
	Design Collision detection algorithm
	"Winner takes the source code!"

============== done ===============

Nov 8th, 2010
	a server folder, a client folder
	Figure out a way to get channel info, and get more than one packet
	A Go player class, A Go A.I class
	A JS player class, A JS A.I class
	Seperate WebSocket from main package
	A golang websocket service that tells client 12 times per second about every unit's positions using json array
